services:
  traefik:
    image: traefik:v3.0
    container_name: firecast-traefik
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:8000"
      - "--entrypoints.websecure.address=:8443"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
    ports:
      - "8888:8000" # HTTP
      - "8443:8443" # HTTPS
      - "8080:8080" # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt_data:/letsencrypt
    networks:
      - firecast-network
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: firecast-redis
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - firecast-network
    restart: unless-stopped

  firecast-server:
    image: ghcr.io/yggdrion/firecast/server:latest
    container_name: firecast-server
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
    networks:
      - firecast-network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.firecast-server.rule=Host(`${DOMAIN_NAME}`)"
      - "traefik.http.routers.firecast-server.entrypoints=websecure"
      - "traefik.http.routers.firecast-server.tls.certresolver=letsencrypt"
      - "traefik.http.services.firecast-server.loadbalancer.server.port=8080"

volumes:
  redis_data:
  letsencrypt_data:

networks:
  firecast-network:
    driver: bridge
